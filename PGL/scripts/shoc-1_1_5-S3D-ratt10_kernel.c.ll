	  %a = alloca [16384 x float], align 16
	  %b = alloca [16384 x float], align 16
	  %c = alloca float, align 4
	  %1 = bitcast [16384 x float]* %a to i8*
	  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([16384 x float]* @main.a to i8*), i64 65536, i32 16, i1 false)
	  %4 = bitcast [16384 x float]* %b to i8*
	  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast ([16384 x float]* @main.b to i8*), i64 65536, i32 16, i1 false)
	  %9 = load float, float* %c, align 4
	  %8 = getelementptr inbounds [16384 x float], [16384 x float]* %b, i32 0, i32 0
	  %7 = getelementptr inbounds [16384 x float], [16384 x float]* %a, i32 0, i32 0
	store float* %7, float** %a, align 8
	store  float* %8, float** %b, align 8
	store  float %9, float* %c, align 8
	  store float 1.000000e+00, float* %c, align 4
	  call void @A(float* %7, float* %8, float %9)
	  %11 = load float, float* %d, align 4
	  %9 = load float, float* %3, align 4
	  %8 = load float, float* %7, align 4
	  %7 = getelementptr inbounds float, float* %6, i64 %5
	  %6 = load float*, float** %1, align 8
	  %4 = load i32, i32* %z, align 4
	  %1 = alloca float*, align 8
	  %2 = alloca float*, align 8
	  %3 = alloca float, align 4
	  %z = alloca i32, align 4
	  %d = alloca float, align 4
	  %e = alloca float, align 4
	  store float* %a, float** %1, align 8
	  store float* %b, float** %2, align 8
	  store float %c, float* %3, align 4
	  store i32 0, i32* %z, align 4
	  %5 = sext i32 %4 to i64
	  %10 = fmul float %8, %9
	  store float %10, float* %d, align 4
	  %12 = fpext float %11 to double
	  %14 = call double @log(double %12) #3
	  %20 = load float, float* %d, align 4
	  %17 = load float, float* %e, align 4
	  %16 = fptrunc double %14 to float
	  store float %16, float* %e, align 4
	  %18 = fmul float 0x3FECCCCCC0000000, %17
	  %19 = fsub float 0x404523C4C0000000, %18
	  %21 = fdiv float 1.000000e+00, %20
	  %22 = fmul float 0x408ABBBF20000000, %21
	  %23 = fadd float %19, %22
	  %24 = fpext float %23 to double
	  %26 = call double @exp(double %24) #4
	  %38 = load float, float* %d, align 4
	  %35 = load float, float* %e, align 4
	  %34 = getelementptr inbounds float, float* %33, i64 %32
	  %33 = load float*, float** %2, align 8
	  %29 = load i32, i32* %z, align 4
	  %28 = fptrunc double %26 to float
	  %30 = add nsw i32 0, %29
	  %31 = srem i32 %30, 128
	  %32 = sext i32 %31 to i64
	  store float %28, float* %34, align 4
	  %36 = fmul float 0x400B5C2900000000, %35
	  %37 = fsub float 0x404FE58580000000, %36
	  %39 = fdiv float 1.000000e+00, %38
	  %40 = fmul float 0x40E4B9CA60000000, %39
	  %41 = fsub float %37, %40
	  %42 = fpext float %41 to double
	  %44 = call double @exp(double %42) #4
	  %56 = load float, float* %d, align 4
	  %53 = load float, float* %e, align 4
	  %52 = getelementptr inbounds float, float* %51, i64 %50
	  %51 = load float*, float** %2, align 8
	  %47 = load i32, i32* %z, align 4
	  %46 = fptrunc double %44 to float
	  %48 = add nsw i32 8, %47
	  %49 = srem i32 %48, 128
	  %50 = sext i32 %49 to i64
	  store float %46, float* %52, align 4
	  %54 = fmul float 0x400DEB8520000000, %53
	  %55 = fsub float 0x40505D9020000000, %54
	  %57 = fdiv float 1.000000e+00, %56
	  %58 = fmul float 0x408E71D1E0000000, %57
	  %59 = fsub float %55, %58
	  %60 = fpext float %59 to double
	  %62 = call double @exp(double %60) #4
	  %74 = load float, float* %d, align 4
	  %71 = load float, float* %e, align 4
	  %70 = getelementptr inbounds float, float* %69, i64 %68
	  %69 = load float*, float** %2, align 8
	  %65 = load i32, i32* %z, align 4
	  %64 = fptrunc double %62 to float
	  %66 = add nsw i32 16, %65
	  %67 = srem i32 %66, 128
	  %68 = sext i32 %67 to i64
	  store float %64, float* %70, align 4
	  %72 = fmul float 0x40048F5C20000000, %71
	  %73 = fsub float 0x404BC7F460000000, %72
	  %75 = fdiv float 1.000000e+00, %74
	  %76 = fmul float 0x408668AB80000000, %75
	  %77 = fsub float %73, %76
	  %78 = fpext float %77 to double
	  %80 = call double @exp(double %78) #4
	  %92 = load float, float* %d, align 4
	  %89 = load float, float* %e, align 4
	  %88 = getelementptr inbounds float, float* %87, i64 %86
	  %87 = load float*, float** %2, align 8
	  %83 = load i32, i32* %z, align 4
	  %82 = fptrunc double %80 to float
	  %84 = add nsw i32 24, %83
	  %85 = srem i32 %84, 128
	  %86 = sext i32 %85 to i64
	  store float %82, float* %88, align 4
	  %90 = fmul float 0x40091EB860000000, %89
	  %91 = fsub float 0x404FAA9E00000000, %90
	  %93 = fdiv float 1.000000e+00, %92
	  %94 = fmul float 0x408357A6E0000000, %93
	  %95 = fsub float %91, %94
	  %96 = fpext float %95 to double
	  %98 = call double @exp(double %96) #4
	  %110 = load float, float* %d, align 4
	  %107 = load float, float* %e, align 4
	  %106 = getelementptr inbounds float, float* %105, i64 %104
	  %105 = load float*, float** %2, align 8
	  %101 = load i32, i32* %z, align 4
	  %100 = fptrunc double %98 to float
	  %102 = add nsw i32 32, %101
	  %103 = srem i32 %102, 128
	  %104 = sext i32 %103 to i64
	  store float %100, float* %106, align 4
	  %108 = fmul float 0x401470A3E0000000, %107
	  %109 = fsub float 0x40533E63E0000000, %108
	  %111 = fdiv float 1.000000e+00, %110
	  %112 = fmul float 0x40ABE4A500000000, %111
	  %113 = fsub float %109, %112
	  %114 = fpext float %113 to double
	  %116 = call double @exp(double %114) #4
	  %128 = load float, float* %d, align 4
	  %125 = load float, float* %e, align 4
	  %124 = getelementptr inbounds float, float* %123, i64 %122
	  %123 = load float*, float** %2, align 8
	  %119 = load i32, i32* %z, align 4
	  %118 = fptrunc double %116 to float
	  %120 = add nsw i32 40, %119
	  %121 = srem i32 %120, 128
	  %122 = sext i32 %121 to i64
	  store float %118, float* %124, align 4
	  %126 = fmul float 0x4013333340000000, %125
	  %127 = fsub float 0x4051776CC0000000, %126
	  %129 = fdiv float 1.000000e+00, %128
	  %130 = fmul float 0x40A5DBC500000000, %129
	  %131 = fsub float %127, %130
	  %132 = fpext float %131 to double
	  %134 = call double @exp(double %132) #4
	  %146 = load float, float* %d, align 4
	  %143 = load float, float* %e, align 4
	  %142 = getelementptr inbounds float, float* %141, i64 %140
	  %141 = load float*, float** %2, align 8
	  %137 = load i32, i32* %z, align 4
	  %136 = fptrunc double %134 to float
	  %138 = add nsw i32 48, %137
	  %139 = srem i32 %138, 128
	  %140 = sext i32 %139 to i64
	  store float %136, float* %142, align 4
	  %144 = fmul float 0x40130A3D80000000, %143
	  %145 = fsub float 0x4053391C60000000, %144
	  %147 = fdiv float 1.000000e+00, %146
	  %148 = fmul float 0x40932F6500000000, %147
	  %149 = fsub float %145, %148
	  %150 = fpext float %149 to double
	  %152 = call double @exp(double %150) #4
	  %164 = load float, float* %d, align 4
	  %161 = load float, float* %e, align 4
	  %160 = getelementptr inbounds float, float* %159, i64 %158
	  %159 = load float*, float** %2, align 8
	  %155 = load i32, i32* %z, align 4
	  %154 = fptrunc double %152 to float
	  %156 = add nsw i32 56, %155
	  %157 = srem i32 %156, 128
	  %158 = sext i32 %157 to i64
	  store float %154, float* %160, align 4
	  %162 = fmul float 0x40232D0E60000000, %161
	  %163 = fsub float 0x405BD400C0000000, %162
	  %165 = fdiv float 1.000000e+00, %164
	  %166 = fmul float 0x40A40CCF60000000, %165
	  %167 = fsub float %163, %166
	  %168 = fpext float %167 to double
	  %170 = call double @exp(double %168) #4
	  %182 = load float, float* %d, align 4
	  %179 = load float, float* %e, align 4
	  %178 = getelementptr inbounds float, float* %177, i64 %176
	  %177 = load float*, float** %2, align 8
	  %173 = load i32, i32* %z, align 4
	  %172 = fptrunc double %170 to float
	  %174 = add nsw i32 64, %173
	  %175 = srem i32 %174, 128
	  %176 = sext i32 %175 to i64
	  store float %172, float* %178, align 4
	  %180 = fmul float 0x4023570A40000000, %179
	  %181 = fsub float 0x405CECD0A0000000, %180
	  %183 = fdiv float 1.000000e+00, %182
	  %184 = fmul float 0x40A87403E0000000, %183
	  %185 = fsub float %181, %184
	  %186 = fpext float %185 to double
	  %188 = call double @exp(double %186) #4
	  %200 = load float, float* %d, align 4
	  %197 = load float, float* %e, align 4
	  %196 = getelementptr inbounds float, float* %195, i64 %194
	  %195 = load float*, float** %2, align 8
	  %191 = load i32, i32* %z, align 4
	  %190 = fptrunc double %188 to float
	  %192 = add nsw i32 72, %191
	  %193 = srem i32 %192, 128
	  %194 = sext i32 %193 to i64
	  store float %190, float* %196, align 4
	  %198 = fmul float 0x3FE47AE140000000, %197
	  %199 = fsub float 0x4041B7A9A0000000, %198
	  %201 = fdiv float 1.000000e+00, %200
	  %202 = fmul float 0x40D86C77A0000000, %201
	  %203 = fsub float %199, %202
	  %204 = fpext float %203 to double
	  %206 = call double @exp(double %204) #4
	  %218 = load float, float* %d, align 4
	  %215 = load float, float* %e, align 4
	  %214 = getelementptr inbounds float, float* %213, i64 %212
	  %213 = load float*, float** %2, align 8
	  %209 = load i32, i32* %z, align 4
	  %208 = fptrunc double %206 to float
	  %210 = add nsw i32 80, %209
	  %211 = srem i32 %210, 128
	  %212 = sext i32 %211 to i64
	  store float %208, float* %214, align 4
	  %216 = fmul float 0x400B333340000000, %215
	  %217 = fsub float 0x404F8E4E00000000, %216
	  %219 = fdiv float 1.000000e+00, %218
	  %220 = fmul float 0x40D197A0C0000000, %219
	  %221 = fsub float %217, %220
	  %222 = fpext float %221 to double
	  %224 = call double @exp(double %222) #4
	  %236 = load float, float* %d, align 4
	  %233 = load float, float* %e, align 4
	  %232 = getelementptr inbounds float, float* %231, i64 %230
	  %231 = load float*, float** %2, align 8
	  %227 = load i32, i32* %z, align 4
	  %226 = fptrunc double %224 to float
	  %228 = add nsw i32 88, %227
	  %229 = srem i32 %228, 128
	  %230 = sext i32 %229 to i64
	  store float %226, float* %232, align 4
	  %234 = fmul float 0x401E8F5C20000000, %233
	  %235 = fsub float 0x4057EF6C60000000, %234
	  %237 = fdiv float 1.000000e+00, %236
	  %238 = fmul float 0x40B7644740000000, %237
	  %239 = fsub float %235, %238
	  %240 = fpext float %239 to double
	  %242 = call double @exp(double %240) #4
	  %254 = load float, float* %d, align 4
	  %251 = load float, float* %e, align 4
	  %250 = getelementptr inbounds float, float* %249, i64 %248
	  %249 = load float*, float** %2, align 8
	  %245 = load i32, i32* %z, align 4
	  %244 = fptrunc double %242 to float
	  %246 = add nsw i32 96, %245
	  %247 = srem i32 %246, 128
	  %248 = sext i32 %247 to i64
	  store float %244, float* %250, align 4
	  %252 = fmul float 0x400EE147A0000000, %251
	  %253 = fsub float 0x40515A7F60000000, %252
	  %255 = fdiv float 1.000000e+00, %254
	  %256 = fmul float 0x409A1AB7A0000000, %255
	  %257 = fsub float %253, %256
	  %258 = fpext float %257 to double
	  %260 = call double @exp(double %258) #4
	  %272 = load float, float* %d, align 4
	  %269 = load float, float* %e, align 4
	  %268 = getelementptr inbounds float, float* %267, i64 %266
	  %267 = load float*, float** %2, align 8
	  %263 = load i32, i32* %z, align 4
	  %262 = fptrunc double %260 to float
	  %264 = add nsw i32 104, %263
	  %265 = srem i32 %264, 128
	  %266 = sext i32 %265 to i64
	  store float %262, float* %268, align 4
	  %270 = fmul float 0x4027E147A0000000, %269
	  %271 = fsub float 0x4060E00CC0000000, %270
	  %273 = fdiv float 1.000000e+00, %272
	  %274 = fmul float 0x40B3345380000000, %273
	  %275 = fsub float %271, %274
	  %276 = fpext float %275 to double
	  %278 = call double @exp(double %276) #4
	  %290 = load float, float* %d, align 4
	  %287 = load float, float* %e, align 4
	  %286 = getelementptr inbounds float, float* %285, i64 %284
	  %285 = load float*, float** %2, align 8
	  %281 = load i32, i32* %z, align 4
	  %280 = fptrunc double %278 to float
	  %282 = add nsw i32 112, %281
	  %283 = srem i32 %282, 128
	  %284 = sext i32 %283 to i64
	  store float %280, float* %286, align 4
	  %288 = fmul float 0x401D3020C0000000, %287
	  %289 = fsub float 0x4056DCC440000000, %288
	  %291 = fdiv float 1.000000e+00, %290
	  %292 = fmul float 0x40A27A3CA0000000, %291
	  %293 = fsub float %289, %292
	  %294 = fpext float %293 to double
	  %296 = call double @exp(double %294) #4
	  %308 = load float, float* %d, align 4
	  %305 = load float, float* %e, align 4
	  %304 = getelementptr inbounds float, float* %303, i64 %302
	  %303 = load float*, float** %2, align 8
	  %299 = load i32, i32* %z, align 4
	  %298 = fptrunc double %296 to float
	  %300 = add nsw i32 120, %299
	  %301 = srem i32 %300, 128
	  %302 = sext i32 %301 to i64
	  store float %298, float* %304, align 4
	  %306 = fmul float 0x40229EB860000000, %305
	  %307 = fsub float 0x405D44CF80000000, %306
	  %309 = fdiv float 1.000000e+00, %308
	  %310 = fmul float 0x40E88966E0000000, %309
	  %311 = fsub float %307, %310
	  %312 = fpext float %311 to double
	  %314 = call double @exp(double %312) #4
	  %326 = load float, float* %d, align 4
	  %323 = load float, float* %e, align 4
	  %322 = getelementptr inbounds float, float* %321, i64 %320
	  %321 = load float*, float** %2, align 8
	  %317 = load i32, i32* %z, align 4
	  %316 = fptrunc double %314 to float
	  %318 = add nsw i32 128, %317
	  %319 = srem i32 %318, 128
	  %320 = sext i32 %319 to i64
	  store float %316, float* %322, align 4
	  %324 = fmul float 0x401E7AE140000000, %323
	  %325 = fsub float 0x4058390460000000, %324
	  %327 = fdiv float 1.000000e+00, %326
	  %328 = fmul float 0x40AB66D720000000, %327
	  %329 = fsub float %325, %328
	  %330 = fpext float %329 to double
	  %332 = call double @exp(double %330) #4
	  %344 = load float, float* %d, align 4
	  %341 = load float, float* %e, align 4
	  %340 = getelementptr inbounds float, float* %339, i64 %338
	  %339 = load float*, float** %2, align 8
	  %335 = load i32, i32* %z, align 4
	  %334 = fptrunc double %332 to float
	  %336 = add nsw i32 136, %335
	  %337 = srem i32 %336, 128
	  %338 = sext i32 %337 to i64
	  store float %334, float* %340, align 4
	  %342 = fmul float 0x401C51EB80000000, %341
	  %343 = fsub float 0x4057C60620000000, %342
	  %345 = fdiv float 1.000000e+00, %344
	  %346 = fmul float 0x40AA4801C0000000, %345
	  %347 = fsub float %343, %346
	  %348 = fpext float %347 to double
	  %350 = call double @exp(double %348) #4
	  %362 = load float, float* %d, align 4
	  %359 = load float, float* %e, align 4
	  %358 = getelementptr inbounds float, float* %357, i64 %356
	  %357 = load float*, float** %2, align 8
	  %353 = load i32, i32* %z, align 4
	  %352 = fptrunc double %350 to float
	  %354 = add nsw i32 144, %353
	  %355 = srem i32 %354, 128
	  %356 = sext i32 %355 to i64
	  store float %352, float* %358, align 4
	  %360 = fmul float 1.200000e+01, %359
	  %361 = fsub float 0x40614E16E0000000, %360
	  %363 = fdiv float 1.000000e+00, %362
	  %364 = fmul float 0x40A7763160000000, %363
	  %365 = fsub float %361, %364
	  %366 = fpext float %365 to double
	  %368 = call double @exp(double %366) #4
	  %380 = load float, float* %d, align 4
	  %377 = load float, float* %e, align 4
	  %376 = getelementptr inbounds float, float* %375, i64 %374
	  %375 = load float*, float** %2, align 8
	  %371 = load i32, i32* %z, align 4
	  %370 = fptrunc double %368 to float
	  %372 = add nsw i32 152, %371
	  %373 = srem i32 %372, 128
	  %374 = sext i32 %373 to i64
	  store float %370, float* %376, align 4
	  %378 = fmul float 0x401AA3D700000000, %377
	  %379 = fsub float 0x4056554640000000, %378
	  %381 = fdiv float 1.000000e+00, %380
	  %382 = fmul float 0x40AB850880000000, %381
	  %383 = fsub float %379, %382
	  %384 = fpext float %383 to double
	  %386 = call double @exp(double %384) #4
	  %394 = getelementptr inbounds float, float* %393, i64 %392
	  %393 = load float*, float** %2, align 8
	  %389 = load i32, i32* %z, align 4
	  %388 = fptrunc double %386 to float
	  %390 = add nsw i32 160, %389
	  %391 = srem i32 %390, 128
	  %392 = sext i32 %391 to i64
	  store float %388, float* %394, align 4
