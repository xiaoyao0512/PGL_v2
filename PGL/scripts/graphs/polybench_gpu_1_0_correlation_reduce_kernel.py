import networkx as nx
import dgl
def polybench_gpu_1_0_correlation_reduce_kernel():
	NXG = nx.DiGraph()
	NXG.add_edge(29, 37, weight=13)
	NXG.add_node(29, w=13)
	NXG.add_node(37, w=13)
	NXG.add_edge(24, 40, weight=25)
	NXG.add_node(24, w=25)
	NXG.add_node(40, w=25)
	NXG.add_edge(14, 17, weight=25)
	NXG.add_node(14, w=25)
	NXG.add_node(17, w=25)
	NXG.add_edge(14, 25, weight=64)
	NXG.add_node(14, w=64)
	NXG.add_node(25, w=64)
	NXG.add_edge(5, 11, weight=1)
	NXG.add_node(5, w=1)
	NXG.add_node(11, w=1)
	NXG.add_edge(5, 20, weight=11)
	NXG.add_node(5, w=11)
	NXG.add_node(20, w=11)
	NXG.add_edge(11, 20, weight=27)
	NXG.add_node(11, w=27)
	NXG.add_node(20, w=27)
	NXG.add_edge(11, 25, weight=36)
	NXG.add_node(11, w=36)
	NXG.add_node(25, w=36)
	NXG.add_edge(15, 16, weight=12)
	NXG.add_node(15, w=12)
	NXG.add_node(16, w=12)
	NXG.add_edge(15, 25, weight=4)
	NXG.add_node(15, w=4)
	NXG.add_node(25, w=4)
	NXG.add_edge(31, 39, weight=15)
	NXG.add_node(31, w=15)
	NXG.add_node(39, w=15)
	NXG.add_edge(20, 23, weight=149)
	NXG.add_node(20, w=149)
	NXG.add_node(23, w=149)
	NXG.add_edge(23, 39, weight=11)
	NXG.add_node(23, w=11)
	NXG.add_node(39, w=11)
	NXG.add_edge(33, 41, weight=94)
	NXG.add_node(33, w=94)
	NXG.add_node(41, w=94)
	NXG.add_edge(6, 10, weight=1)
	NXG.add_node(6, w=1)
	NXG.add_node(10, w=1)
	NXG.add_edge(6, 21, weight=8)
	NXG.add_node(6, w=8)
	NXG.add_node(21, w=8)
	NXG.add_edge(27, 35, weight=13)
	NXG.add_node(27, w=13)
	NXG.add_node(35, w=13)
	NXG.add_edge(19, 22, weight=109)
	NXG.add_node(19, w=109)
	NXG.add_node(22, w=109)
	NXG.add_edge(1, 7, weight=1)
	NXG.add_node(1, w=1)
	NXG.add_node(7, w=1)
	NXG.add_edge(1, 15, weight=1)
	NXG.add_node(1, w=1)
	NXG.add_node(15, w=1)
	NXG.add_edge(1, 16, weight=9)
	NXG.add_node(1, w=9)
	NXG.add_node(16, w=9)
	NXG.add_edge(28, 36, weight=14)
	NXG.add_node(28, w=14)
	NXG.add_node(36, w=14)
	NXG.add_edge(21, 24, weight=83)
	NXG.add_node(21, w=83)
	NXG.add_node(24, w=83)
	NXG.add_edge(34, 42, weight=174)
	NXG.add_node(34, w=174)
	NXG.add_node(42, w=174)
	NXG.add_edge(13, 18, weight=27)
	NXG.add_node(13, w=27)
	NXG.add_node(18, w=27)
	NXG.add_edge(13, 25, weight=21)
	NXG.add_node(13, w=21)
	NXG.add_node(25, w=21)
	NXG.add_edge(18, 37, weight=22)
	NXG.add_node(18, w=22)
	NXG.add_node(37, w=22)
	NXG.add_edge(17, 36, weight=25)
	NXG.add_node(17, w=25)
	NXG.add_node(36, w=25)
	NXG.add_edge(32, 40, weight=9)
	NXG.add_node(32, w=9)
	NXG.add_node(40, w=9)
	NXG.add_edge(10, 21, weight=9)
	NXG.add_node(10, w=9)
	NXG.add_node(21, w=9)
	NXG.add_edge(10, 25, weight=53)
	NXG.add_node(10, w=53)
	NXG.add_node(25, w=53)
	NXG.add_edge(16, 35, weight=5)
	NXG.add_node(16, w=5)
	NXG.add_node(35, w=5)
	NXG.add_edge(3, 9, weight=1)
	NXG.add_node(3, w=1)
	NXG.add_node(9, w=1)
	NXG.add_edge(3, 13, weight=1)
	NXG.add_node(3, w=1)
	NXG.add_node(13, w=1)
	NXG.add_edge(3, 18, weight=8)
	NXG.add_node(3, w=8)
	NXG.add_node(18, w=8)
	NXG.add_edge(2, 8, weight=1)
	NXG.add_node(2, w=1)
	NXG.add_node(8, w=1)
	NXG.add_edge(2, 14, weight=1)
	NXG.add_node(2, w=1)
	NXG.add_node(14, w=1)
	NXG.add_edge(2, 17, weight=10)
	NXG.add_node(2, w=10)
	NXG.add_node(17, w=10)
	NXG.add_edge(25, 26, weight=1)
	NXG.add_node(25, w=1)
	NXG.add_node(26, w=1)
	NXG.add_edge(26, 43, weight=1)
	NXG.add_node(26, w=1)
	NXG.add_node(43, w=1)
	NXG.add_edge(12, 19, weight=29)
	NXG.add_node(12, w=29)
	NXG.add_node(19, w=29)
	NXG.add_edge(12, 25, weight=50)
	NXG.add_node(12, w=50)
	NXG.add_node(25, w=50)
	NXG.add_edge(22, 38, weight=15)
	NXG.add_node(22, w=15)
	NXG.add_node(38, w=15)
	NXG.add_edge(30, 38, weight=10)
	NXG.add_node(30, w=10)
	NXG.add_node(38, w=10)
	NXG.add_edge(4, 12, weight=1)
	NXG.add_node(4, w=1)
	NXG.add_node(12, w=1)
	NXG.add_edge(4, 19, weight=12)
	NXG.add_node(4, w=12)
	NXG.add_node(19, w=12)
	g = dgl.from_networkx(NXG, edge_attrs=['weight'], node_attrs=['w'])
	return g
